rules:
- apiGroups: [""]
  apiVersions: ["v1"]
  resources: ["pods"]
  operations: ["CREATE"]
mutating: false
contextAware: false
annotations:
  io.kubewarden.policy.title: psp-sysctl
  io.kubewarden.policy.description: PSP that controls usage of sysctls in pods
  io.kubewarden.policy.author: Victor Cuadrado Juan
  io.kubewarden.policy.url: https://github.com/kubewarden/psp-sysctl-policy
  io.kubewarden.policy.source: https://github.com/kubewarden/psp-sysctl-policy
  io.kubewarden.policy.license: Apache-2.0
  io.kubewarden.policy.usage: |
    This policy validates which sysctls can get set in pods by specifying lists
    of sysctls or sysctl patterns to be allowed or forbidden. One can then
    modify the `securityContext` of Pods to make use of the Sysctls as permitted
    by this policy.

    ## Settings

    The following settings are accepted:

    * `forbiddenSysctls`: List of plain sysctl names or sysctl patterns (which end
      with `*`) to be forbidden. You can forbid a combination of safe and unsafe
      sysctls in the list. To forbid setting any sysctls, use `*` on its own.
    * `allowedUnsafeSysctls`: List of plain sysctl names that can be used in Pods.
      `*` cannot be used. `allowedUnsafeSysctls` has precedence over
      `forbiddenSysctls`.

    A sysctl cannot be both forbidden and allowed at the same time.

    ### Example

    With this policy deployed and configured as:

    ``` yaml
    forbiddenSysctls:
    - net.ipv6.conf.lo.*
    allowedUnsafeSysctls:
    - net.ipv6.conf.lo.max_addresses
    ```


    A pod specifying the following Sysctls would get permitted, as they are
    allowedUnsafe or on the default safe set:

    ``` yaml
    apiVersion: v1
    kind: Pod
    metadata:
      name: sysctl-example
    spec:
      securityContext:
        sysctls:
        - name: net.ipv6.conf.lo.max_addresses
          value: "1024"
        - name: kernel.shm_rmid_forced
          value: "0"
    ...
    ```


    Yet the following pod will get rejected, as `net.ipv6.conf.lo.mtu` is forbidden,
    even if `kernel.shm_rmid_forced` is part of the default safe set:

    ``` yaml
    apiVersion: v1
    kind: Pod
    metadata:
      name: sysctl-example
    spec:
      securityContext:
        sysctls:
        - name: kernel.shm_rmid_forced
          value: "0"
        - name: net.ipv6.conf.lo.mtu
          value: "32768"
    ...
    ```
